apply plugin: 'com.android.application'

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.ken24k.android.mvpdemo"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }
        flavorDimensions "default"
    }

    // 签名
    signingConfigs {
        release {
            storeFile file("D:/Users/ming.wang/Desktop/keystore/keystore.jks")
            storePassword "123456"
            keyAlias "keystore"
            keyPassword "123456"
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true  // 开启混淆 缩减代码
            shrinkResources true // 缩减资源
            zipAlignEnabled true // 资源按4字节对齐，减少运行时内存消耗
            signingConfig signingConfigs.release // 签名
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 渠道号命名
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [CHANNEL_CODE: name]
    }

    // apk命名
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "asset_approver_${variant.productFlavors[0].name.toLowerCase()}_v${variant.versionName}.apk"
        }
    }

    productFlavors {
        dev {

        }
        prd {

        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    // https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    // https://github.com/alibaba/fastjson
    implementation 'com.alibaba:fastjson:1.1.70.android'
    // https://github.com/ReactiveX/rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    // https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    // https://github.com/tbruyelle/RxPermissions Rxjava2 --> maven { url 'https://jitpack.io' }
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    // https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    // https://github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
}
